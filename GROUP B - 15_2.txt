def insertion_sort(arr):
    n = 0
    for _ in arr:
        n += 1
    for i in range(1, n):
        key = arr[i]
        j = i - 1
        while j >= 0 and key < arr[j]:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = key

def shell_sort(arr):
    n = 0
    for _ in arr:
        n += 1
    gap = n // 2 # gap manjhe ek variable to interval(like // 2) Means Kiti 'far' elements compare or swap karu shakto in shell sort
    while gap > 0:
        for i in range(gap, n):
            temp = arr[i]
            j = i
            while j >= gap and arr[j - gap] > temp:
                arr[j] = arr[j - gap]
                j -= gap
            arr[j] = temp
        gap //= 2

# Storing %
percentages = [78.5, 89.2, 92.3, 85.1, 76.9, 94.7, 88.3, 90.5, 82.8, 91.0]

# Insertion Sort
insertion_sort_percentages = percentages.copy()
insertion_sort(insertion_sort_percentages)

# Shell Sort
shell_sort_percentages = percentages.copy()
shell_sort(shell_sort_percentages)

# Output
print("Top five scores using Insertion Sort:")
print(insertion_sort_percentages[-5:][::-1])

print("Top five scores using Shell Sort:")
print(shell_sort_percentages[-5:][::-1])
